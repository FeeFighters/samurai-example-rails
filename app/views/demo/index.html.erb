<div id="content" class="wrapper products">

  <article class="product">
    <h2><%= link_to 'Samurai.js Katana Sword', samurai_js_payment_form_path %></h2>
    <%= link_to image_tag('katana-sword.jpg', :size => '190x190'), samurai_js_payment_form_path %>
    <p>
      This razor-sharp sword will cut through all of your API integration headaches.
      It provides AJAX-powered payments with simple, drop-in forms that you can customize
      with ease. PCI compliance is a cinch, because the credit card data never touches your server.
    </p>
    <%= link_to 'Buy Now!', samurai_js_payment_form_path, :class => 'grey button span-2' %>
  </article>

  <article class="product">
    <h2><%= link_to 'Transparent Redirect Nunchucks', transparent_redirect_payment_form_path %></h2>
    <%= link_to image_tag('nunchucks.jpg', :size => '190x190'), transparent_redirect_payment_form_path %>
    <p>
      These nunchunks come bundled with our Transparent Redirect process, a simple pure-HTML method for
      processing payments without letting the credit cards touch your server.
      You point the payment form at Samurai's secure servers, and we send back a token that you can
      use to process transactions. Simple, effective, <em>deadly</em>.
    </p>
    <%= link_to 'Buy Now!', transparent_redirect_payment_form_path, :class => 'grey button span-2' %>
  </article>

  <article class="product">
    <h2><%= link_to 'Server-to-Server Battle Axe', server_to_server_payment_form_path %></h2>
    <%= link_to image_tag('battle-axe.jpg', :size => '190x190'), server_to_server_payment_form_path, :class => 'thumbnail' %>
    <p>
      Sometimes you just need to hack your way through. For these situations, our server-to-server
      battle axe API is precisely the right tool for the job. Simply POST the credit card details to your
      server, and process the transaction on the backend.
      <em>(Note: those pesky PCI-compliance ninjas are sure to harass you with this approach, but you can handle it.</em>
    </p>
    <%= link_to 'Buy Now!', server_to_server_payment_form_path, :class => 'grey button span-2' %>
  </article>

</div>
